/**
 */
package rover.raspirover.raspirover.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import rover.raspirover.raspirover.util.RaspiroverAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class RaspiroverItemProviderAdapterFactory extends RaspiroverAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RaspiroverItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.RasPiBoard} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RasPiBoardItemProvider rasPiBoardItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.RasPiBoard}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRasPiBoardAdapter() {
		if (rasPiBoardItemProvider == null) {
			rasPiBoardItemProvider = new RasPiBoardItemProvider(this);
		}

		return rasPiBoardItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Project} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProjectItemProvider projectItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Project}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProjectAdapter() {
		if (projectItemProvider == null) {
			projectItemProvider = new ProjectItemProvider(this);
		}

		return projectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Sketch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SketchItemProvider sketchItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Sketch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSketchAdapter() {
		if (sketchItemProvider == null) {
			sketchItemProvider = new SketchItemProvider(this);
		}

		return sketchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Block} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BlockItemProvider blockItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Block}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBlockAdapter() {
		if (blockItemProvider == null) {
			blockItemProvider = new BlockItemProvider(this);
		}

		return blockItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.DigitalPin} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DigitalPinItemProvider digitalPinItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.DigitalPin}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDigitalPinAdapter() {
		if (digitalPinItemProvider == null) {
			digitalPinItemProvider = new DigitalPinItemProvider(this);
		}

		return digitalPinItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Pin} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PinItemProvider pinItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Pin}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPinAdapter() {
		if (pinItemProvider == null) {
			pinItemProvider = new PinItemProvider(this);
		}

		return pinItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.AnalogPin} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnalogPinItemProvider analogPinItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.AnalogPin}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnalogPinAdapter() {
		if (analogPinItemProvider == null) {
			analogPinItemProvider = new AnalogPinItemProvider(this);
		}

		return analogPinItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.RoverProgram} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoverProgramItemProvider roverProgramItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.RoverProgram}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoverProgramAdapter() {
		if (roverProgramItemProvider == null) {
			roverProgramItemProvider = new RoverProgramItemProvider(this);
		}

		return roverProgramItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Param} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParamItemProvider paramItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Param}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParamAdapter() {
		if (paramItemProvider == null) {
			paramItemProvider = new ParamItemProvider(this);
		}

		return paramItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.VarAssignment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VarAssignmentItemProvider varAssignmentItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.VarAssignment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVarAssignmentAdapter() {
		if (varAssignmentItemProvider == null) {
			varAssignmentItemProvider = new VarAssignmentItemProvider(this);
		}

		return varAssignmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Conditional} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConditionalItemProvider conditionalItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Conditional}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConditionalAdapter() {
		if (conditionalItemProvider == null) {
			conditionalItemProvider = new ConditionalItemProvider(this);
		}

		return conditionalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Loop} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LoopItemProvider loopItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Loop}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLoopAdapter() {
		if (loopItemProvider == null) {
			loopItemProvider = new LoopItemProvider(this);
		}

		return loopItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.RclBlock} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RclBlockItemProvider rclBlockItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.RclBlock}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRclBlockAdapter() {
		if (rclBlockItemProvider == null) {
			rclBlockItemProvider = new RclBlockItemProvider(this);
		}

		return rclBlockItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.TemperatureQuery} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TemperatureQueryItemProvider temperatureQueryItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.TemperatureQuery}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTemperatureQueryAdapter() {
		if (temperatureQueryItemProvider == null) {
			temperatureQueryItemProvider = new TemperatureQueryItemProvider(this);
		}

		return temperatureQueryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.HumidityQuery} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HumidityQueryItemProvider humidityQueryItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.HumidityQuery}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHumidityQueryAdapter() {
		if (humidityQueryItemProvider == null) {
			humidityQueryItemProvider = new HumidityQueryItemProvider(this);
		}

		return humidityQueryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.MessageQuery} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageQueryItemProvider messageQueryItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.MessageQuery}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageQueryAdapter() {
		if (messageQueryItemProvider == null) {
			messageQueryItemProvider = new MessageQueryItemProvider(this);
		}

		return messageQueryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.ObstacleQuery} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObstacleQueryItemProvider obstacleQueryItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.ObstacleQuery}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObstacleQueryAdapter() {
		if (obstacleQueryItemProvider == null) {
			obstacleQueryItemProvider = new ObstacleQueryItemProvider(this);
		}

		return obstacleQueryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.NumericExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NumericExpressionItemProvider numericExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.NumericExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNumericExpressionAdapter() {
		if (numericExpressionItemProvider == null) {
			numericExpressionItemProvider = new NumericExpressionItemProvider(this);
		}

		return numericExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.StringExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringExpressionItemProvider stringExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.StringExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringExpressionAdapter() {
		if (stringExpressionItemProvider == null) {
			stringExpressionItemProvider = new StringExpressionItemProvider(this);
		}

		return stringExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.BooleanExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanExpressionItemProvider booleanExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.BooleanExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanExpressionAdapter() {
		if (booleanExpressionItemProvider == null) {
			booleanExpressionItemProvider = new BooleanExpressionItemProvider(this);
		}

		return booleanExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.RoverValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoverValueItemProvider roverValueItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.RoverValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoverValueAdapter() {
		if (roverValueItemProvider == null) {
			roverValueItemProvider = new RoverValueItemProvider(this);
		}

		return roverValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.NumberValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NumberValueItemProvider numberValueItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.NumberValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNumberValueAdapter() {
		if (numberValueItemProvider == null) {
			numberValueItemProvider = new NumberValueItemProvider(this);
		}

		return numberValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.StringValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringValueItemProvider stringValueItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.StringValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringValueAdapter() {
		if (stringValueItemProvider == null) {
			stringValueItemProvider = new StringValueItemProvider(this);
		}

		return stringValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.BooleanValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanValueItemProvider booleanValueItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.BooleanValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanValueAdapter() {
		if (booleanValueItemProvider == null) {
			booleanValueItemProvider = new BooleanValueItemProvider(this);
		}

		return booleanValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.ForwardAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ForwardActionItemProvider forwardActionItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.ForwardAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createForwardActionAdapter() {
		if (forwardActionItemProvider == null) {
			forwardActionItemProvider = new ForwardActionItemProvider(this);
		}

		return forwardActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.ForwardMinAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ForwardMinActionItemProvider forwardMinActionItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.ForwardMinAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createForwardMinActionAdapter() {
		if (forwardMinActionItemProvider == null) {
			forwardMinActionItemProvider = new ForwardMinActionItemProvider(this);
		}

		return forwardMinActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.BackwardAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BackwardActionItemProvider backwardActionItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.BackwardAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBackwardActionAdapter() {
		if (backwardActionItemProvider == null) {
			backwardActionItemProvider = new BackwardActionItemProvider(this);
		}

		return backwardActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.BackwardMinAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BackwardMinActionItemProvider backwardMinActionItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.BackwardMinAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBackwardMinActionAdapter() {
		if (backwardMinActionItemProvider == null) {
			backwardMinActionItemProvider = new BackwardMinActionItemProvider(this);
		}

		return backwardMinActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.TurnAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TurnActionItemProvider turnActionItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.TurnAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTurnActionAdapter() {
		if (turnActionItemProvider == null) {
			turnActionItemProvider = new TurnActionItemProvider(this);
		}

		return turnActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.TurnDegAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TurnDegActionItemProvider turnDegActionItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.TurnDegAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTurnDegActionAdapter() {
		if (turnDegActionItemProvider == null) {
			turnDegActionItemProvider = new TurnDegActionItemProvider(this);
		}

		return turnDegActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.StopAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StopActionItemProvider stopActionItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.StopAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStopActionAdapter() {
		if (stopActionItemProvider == null) {
			stopActionItemProvider = new StopActionItemProvider(this);
		}

		return stopActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.LogAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogActionItemProvider logActionItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.LogAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLogActionAdapter() {
		if (logActionItemProvider == null) {
			logActionItemProvider = new LogActionItemProvider(this);
		}

		return logActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.SendAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SendActionItemProvider sendActionItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.SendAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSendActionAdapter() {
		if (sendActionItemProvider == null) {
			sendActionItemProvider = new SendActionItemProvider(this);
		}

		return sendActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.VarRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VarRefItemProvider varRefItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.VarRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVarRefAdapter() {
		if (varRefItemProvider == null) {
			varRefItemProvider = new VarRefItemProvider(this);
		}

		return varRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Unit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitItemProvider unitItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Unit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitAdapter() {
		if (unitItemProvider == null) {
			unitItemProvider = new UnitItemProvider(this);
		}

		return unitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Centimeter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CentimeterItemProvider centimeterItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Centimeter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCentimeterAdapter() {
		if (centimeterItemProvider == null) {
			centimeterItemProvider = new CentimeterItemProvider(this);
		}

		return centimeterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Millimeter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MillimeterItemProvider millimeterItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Millimeter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMillimeterAdapter() {
		if (millimeterItemProvider == null) {
			millimeterItemProvider = new MillimeterItemProvider(this);
		}

		return millimeterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Meter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MeterItemProvider meterItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Meter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMeterAdapter() {
		if (meterItemProvider == null) {
			meterItemProvider = new MeterItemProvider(this);
		}

		return meterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Foot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FootItemProvider footItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Foot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFootAdapter() {
		if (footItemProvider == null) {
			footItemProvider = new FootItemProvider(this);
		}

		return footItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Inch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InchItemProvider inchItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Inch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInchAdapter() {
		if (inchItemProvider == null) {
			inchItemProvider = new InchItemProvider(this);
		}

		return inchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Yard} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected YardItemProvider yardItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Yard}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createYardAdapter() {
		if (yardItemProvider == null) {
			yardItemProvider = new YardItemProvider(this);
		}

		return yardItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Radian} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RadianItemProvider radianItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Radian}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRadianAdapter() {
		if (radianItemProvider == null) {
			radianItemProvider = new RadianItemProvider(this);
		}

		return radianItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Degree} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DegreeItemProvider degreeItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Degree}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDegreeAdapter() {
		if (degreeItemProvider == null) {
			degreeItemProvider = new DegreeItemProvider(this);
		}

		return degreeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Turn} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TurnItemProvider turnItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Turn}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTurnAdapter() {
		if (turnItemProvider == null) {
			turnItemProvider = new TurnItemProvider(this);
		}

		return turnItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Gradian} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GradianItemProvider gradianItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Gradian}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGradianAdapter() {
		if (gradianItemProvider == null) {
			gradianItemProvider = new GradianItemProvider(this);
		}

		return gradianItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Length} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LengthItemProvider lengthItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Length}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLengthAdapter() {
		if (lengthItemProvider == null) {
			lengthItemProvider = new LengthItemProvider(this);
		}

		return lengthItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.Angle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AngleItemProvider angleItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.Angle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAngleAdapter() {
		if (angleItemProvider == null) {
			angleItemProvider = new AngleItemProvider(this);
		}

		return angleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.LengthAdd} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LengthAddItemProvider lengthAddItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.LengthAdd}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLengthAddAdapter() {
		if (lengthAddItemProvider == null) {
			lengthAddItemProvider = new LengthAddItemProvider(this);
		}

		return lengthAddItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.LengthSubtract} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LengthSubtractItemProvider lengthSubtractItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.LengthSubtract}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLengthSubtractAdapter() {
		if (lengthSubtractItemProvider == null) {
			lengthSubtractItemProvider = new LengthSubtractItemProvider(this);
		}

		return lengthSubtractItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.LengthScalarMultiply} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LengthScalarMultiplyItemProvider lengthScalarMultiplyItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.LengthScalarMultiply}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLengthScalarMultiplyAdapter() {
		if (lengthScalarMultiplyItemProvider == null) {
			lengthScalarMultiplyItemProvider = new LengthScalarMultiplyItemProvider(this);
		}

		return lengthScalarMultiplyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.LengthScalarDivide} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LengthScalarDivideItemProvider lengthScalarDivideItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.LengthScalarDivide}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLengthScalarDivideAdapter() {
		if (lengthScalarDivideItemProvider == null) {
			lengthScalarDivideItemProvider = new LengthScalarDivideItemProvider(this);
		}

		return lengthScalarDivideItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.LengthEquals} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LengthEqualsItemProvider lengthEqualsItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.LengthEquals}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLengthEqualsAdapter() {
		if (lengthEqualsItemProvider == null) {
			lengthEqualsItemProvider = new LengthEqualsItemProvider(this);
		}

		return lengthEqualsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.LengthDistinct} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LengthDistinctItemProvider lengthDistinctItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.LengthDistinct}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLengthDistinctAdapter() {
		if (lengthDistinctItemProvider == null) {
			lengthDistinctItemProvider = new LengthDistinctItemProvider(this);
		}

		return lengthDistinctItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.LengthSmaller} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LengthSmallerItemProvider lengthSmallerItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.LengthSmaller}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLengthSmallerAdapter() {
		if (lengthSmallerItemProvider == null) {
			lengthSmallerItemProvider = new LengthSmallerItemProvider(this);
		}

		return lengthSmallerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.LengthGreater} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LengthGreaterItemProvider lengthGreaterItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.LengthGreater}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLengthGreaterAdapter() {
		if (lengthGreaterItemProvider == null) {
			lengthGreaterItemProvider = new LengthGreaterItemProvider(this);
		}

		return lengthGreaterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.AngleAdd} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AngleAddItemProvider angleAddItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.AngleAdd}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAngleAddAdapter() {
		if (angleAddItemProvider == null) {
			angleAddItemProvider = new AngleAddItemProvider(this);
		}

		return angleAddItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.AngleSubtract} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AngleSubtractItemProvider angleSubtractItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.AngleSubtract}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAngleSubtractAdapter() {
		if (angleSubtractItemProvider == null) {
			angleSubtractItemProvider = new AngleSubtractItemProvider(this);
		}

		return angleSubtractItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.AngleScalarMultiply} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AngleScalarMultiplyItemProvider angleScalarMultiplyItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.AngleScalarMultiply}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAngleScalarMultiplyAdapter() {
		if (angleScalarMultiplyItemProvider == null) {
			angleScalarMultiplyItemProvider = new AngleScalarMultiplyItemProvider(this);
		}

		return angleScalarMultiplyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.AngleScalarDivide} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AngleScalarDivideItemProvider angleScalarDivideItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.AngleScalarDivide}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAngleScalarDivideAdapter() {
		if (angleScalarDivideItemProvider == null) {
			angleScalarDivideItemProvider = new AngleScalarDivideItemProvider(this);
		}

		return angleScalarDivideItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.AngleEquals} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AngleEqualsItemProvider angleEqualsItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.AngleEquals}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAngleEqualsAdapter() {
		if (angleEqualsItemProvider == null) {
			angleEqualsItemProvider = new AngleEqualsItemProvider(this);
		}

		return angleEqualsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.AngleDistinct} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AngleDistinctItemProvider angleDistinctItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.AngleDistinct}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAngleDistinctAdapter() {
		if (angleDistinctItemProvider == null) {
			angleDistinctItemProvider = new AngleDistinctItemProvider(this);
		}

		return angleDistinctItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.AngleSmaller} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AngleSmallerItemProvider angleSmallerItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.AngleSmaller}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAngleSmallerAdapter() {
		if (angleSmallerItemProvider == null) {
			angleSmallerItemProvider = new AngleSmallerItemProvider(this);
		}

		return angleSmallerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link rover.raspirover.raspirover.AngleGreater} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AngleGreaterItemProvider angleGreaterItemProvider;

	/**
	 * This creates an adapter for a {@link rover.raspirover.raspirover.AngleGreater}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAngleGreaterAdapter() {
		if (angleGreaterItemProvider == null) {
			angleGreaterItemProvider = new AngleGreaterItemProvider(this);
		}

		return angleGreaterItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (rasPiBoardItemProvider != null) rasPiBoardItemProvider.dispose();
		if (projectItemProvider != null) projectItemProvider.dispose();
		if (sketchItemProvider != null) sketchItemProvider.dispose();
		if (blockItemProvider != null) blockItemProvider.dispose();
		if (digitalPinItemProvider != null) digitalPinItemProvider.dispose();
		if (pinItemProvider != null) pinItemProvider.dispose();
		if (analogPinItemProvider != null) analogPinItemProvider.dispose();
		if (roverProgramItemProvider != null) roverProgramItemProvider.dispose();
		if (paramItemProvider != null) paramItemProvider.dispose();
		if (varAssignmentItemProvider != null) varAssignmentItemProvider.dispose();
		if (conditionalItemProvider != null) conditionalItemProvider.dispose();
		if (loopItemProvider != null) loopItemProvider.dispose();
		if (rclBlockItemProvider != null) rclBlockItemProvider.dispose();
		if (temperatureQueryItemProvider != null) temperatureQueryItemProvider.dispose();
		if (humidityQueryItemProvider != null) humidityQueryItemProvider.dispose();
		if (messageQueryItemProvider != null) messageQueryItemProvider.dispose();
		if (obstacleQueryItemProvider != null) obstacleQueryItemProvider.dispose();
		if (numericExpressionItemProvider != null) numericExpressionItemProvider.dispose();
		if (stringExpressionItemProvider != null) stringExpressionItemProvider.dispose();
		if (booleanExpressionItemProvider != null) booleanExpressionItemProvider.dispose();
		if (roverValueItemProvider != null) roverValueItemProvider.dispose();
		if (numberValueItemProvider != null) numberValueItemProvider.dispose();
		if (stringValueItemProvider != null) stringValueItemProvider.dispose();
		if (booleanValueItemProvider != null) booleanValueItemProvider.dispose();
		if (forwardActionItemProvider != null) forwardActionItemProvider.dispose();
		if (forwardMinActionItemProvider != null) forwardMinActionItemProvider.dispose();
		if (backwardActionItemProvider != null) backwardActionItemProvider.dispose();
		if (backwardMinActionItemProvider != null) backwardMinActionItemProvider.dispose();
		if (turnActionItemProvider != null) turnActionItemProvider.dispose();
		if (turnDegActionItemProvider != null) turnDegActionItemProvider.dispose();
		if (stopActionItemProvider != null) stopActionItemProvider.dispose();
		if (logActionItemProvider != null) logActionItemProvider.dispose();
		if (sendActionItemProvider != null) sendActionItemProvider.dispose();
		if (varRefItemProvider != null) varRefItemProvider.dispose();
		if (unitItemProvider != null) unitItemProvider.dispose();
		if (centimeterItemProvider != null) centimeterItemProvider.dispose();
		if (millimeterItemProvider != null) millimeterItemProvider.dispose();
		if (meterItemProvider != null) meterItemProvider.dispose();
		if (footItemProvider != null) footItemProvider.dispose();
		if (inchItemProvider != null) inchItemProvider.dispose();
		if (yardItemProvider != null) yardItemProvider.dispose();
		if (radianItemProvider != null) radianItemProvider.dispose();
		if (degreeItemProvider != null) degreeItemProvider.dispose();
		if (turnItemProvider != null) turnItemProvider.dispose();
		if (gradianItemProvider != null) gradianItemProvider.dispose();
		if (lengthItemProvider != null) lengthItemProvider.dispose();
		if (angleItemProvider != null) angleItemProvider.dispose();
		if (lengthAddItemProvider != null) lengthAddItemProvider.dispose();
		if (lengthSubtractItemProvider != null) lengthSubtractItemProvider.dispose();
		if (lengthScalarMultiplyItemProvider != null) lengthScalarMultiplyItemProvider.dispose();
		if (lengthScalarDivideItemProvider != null) lengthScalarDivideItemProvider.dispose();
		if (lengthEqualsItemProvider != null) lengthEqualsItemProvider.dispose();
		if (lengthDistinctItemProvider != null) lengthDistinctItemProvider.dispose();
		if (lengthSmallerItemProvider != null) lengthSmallerItemProvider.dispose();
		if (lengthGreaterItemProvider != null) lengthGreaterItemProvider.dispose();
		if (angleAddItemProvider != null) angleAddItemProvider.dispose();
		if (angleSubtractItemProvider != null) angleSubtractItemProvider.dispose();
		if (angleScalarMultiplyItemProvider != null) angleScalarMultiplyItemProvider.dispose();
		if (angleScalarDivideItemProvider != null) angleScalarDivideItemProvider.dispose();
		if (angleEqualsItemProvider != null) angleEqualsItemProvider.dispose();
		if (angleDistinctItemProvider != null) angleDistinctItemProvider.dispose();
		if (angleSmallerItemProvider != null) angleSmallerItemProvider.dispose();
		if (angleGreaterItemProvider != null) angleGreaterItemProvider.dispose();
	}

}
